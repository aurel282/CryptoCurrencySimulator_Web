{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about-blockchain/about-blockchain.component.css","webpack:///./src/app/about-blockchain/about-blockchain.component.html","webpack:///./src/app/about-blockchain/about-blockchain.component.ts","webpack:///./src/app/about-crypto/about-crypto.component.css","webpack:///./src/app/about-crypto/about-crypto.component.html","webpack:///./src/app/about-crypto/about-crypto.component.ts","webpack:///./src/app/aboutus/aboutus.component.css","webpack:///./src/app/aboutus/aboutus.component.html","webpack:///./src/app/aboutus/aboutus.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/class/clcryptocurrency.ts","webpack:///./src/app/class/exchange-data.ts","webpack:///./src/app/class/trade-sample.ts","webpack:///./src/app/dialog-info-crypto/dialog-info-crypto.component.css","webpack:///./src/app/dialog-info-crypto/dialog-info-crypto.component.html","webpack:///./src/app/dialog-info-crypto/dialog-info-crypto.component.ts","webpack:///./src/app/dialog-simulation/dialog-simulation.component.css","webpack:///./src/app/dialog-simulation/dialog-simulation.component.html","webpack:///./src/app/dialog-simulation/dialog-simulation.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/info/info.component.css","webpack:///./src/app/info/info.component.html","webpack:///./src/app/info/info.component.ts","webpack:///./src/app/moneysimulator/moneysimulator.component.css","webpack:///./src/app/moneysimulator/moneysimulator.component.html","webpack:///./src/app/moneysimulator/moneysimulator.component.ts","webpack:///./src/app/moneysimulatorV2/moneysimulatorV2.component.css","webpack:///./src/app/moneysimulatorV2/moneysimulatorV2.component.html","webpack:///./src/app/moneysimulatorV2/moneysimulatorV2.component.ts","webpack:///./src/app/realtime-transaction/realtime-transaction.component.css","webpack:///./src/app/realtime-transaction/realtime-transaction.component.html","webpack:///./src/app/realtime-transaction/realtime-transaction.component.ts","webpack:///./src/app/topbar/topbar.component.css","webpack:///./src/app/topbar/topbar.component.html","webpack:///./src/app/topbar/topbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/services/currency/currency.http.service.service.ts","webpack:///./src/services/streamer/trade-streamer.service.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body {\\n    margin:0;\\n    padding:0;\\n    min-height: calc(100vh - 115px );\\n    width: 100%;\\n    background-color: #ffaf66;\\n    \\n    }\\n.MyTxtContent{\\n    padding:10px;\\n    width: 100%;\\n    background-color: #ffaf66;\\n    text-align: center;\\n    }\\n\"","module.exports = \"<body>\\n  <div class=\\\"MyTxtContent\\\">\\n  <h1><strong>What is Blockchain Technology? </strong></h1>\\n  <p>The blockchain is as most of you already known a (not so) new web technology. It is a new way to proceed to information. Utilizing blockchain, the information is distributed and not copied. Blockchain is not only for financial transaction but can be programmed to record every type of value!</p>\\n  <h2><strong>A network of nodes</strong></h2>\\n  <p>Each user connected and performing or validating task get a copy of the blockchain. Each user becomes a node and a an administrator of the blockchain. The copy of the blockchain is updated for every node if the same time.</p>\\n  <h2><strong>Blockchain Durability and robustness</strong></h2>\\n  <p>Blockchain lives thanks to its users and with consensus. Each transactions are referred as a block. Blockchain is a technology that put every users at the same level and that not allows human or machine error anymore. No transaction can be done without the agreement of both parties. All the transactions have a guarantee of the validation and are recorded on all the nodes.</p>\\n  <h2><strong>Transparent and incorruptible</strong></h2>\\n  <p>Having the data shared and available for each users make the blockchain incorruptible and transparent. Incorruptible because to hack it, the hacker needs to hack all the nodes of the blockchain and transparent because all the users have the complete blockchain available.</p>\\n  <h2><strong>The idea of decentralization</strong></h2>\\n  <p>As each user has his own copy of the blockchain there is not one version centralized of it.</p>\\n  <p>As each copy has the same value, the blockchain is not centralized but decentralized.</p>\\n  <h2><strong>How to use the Blockchain &amp; Enhanced security</strong></h2>\\n  <p>Each user has two keys, one public and one private. The public key is the &ldquo;address&rdquo; of the user in the blockchain and the private is what gives the access to the blockchain. This private key must be kept in a safe place.</p>\\n  <h2><strong>Where the blockchain can be useful</strong></h2>\\n  <ul>\\n  <h4><strong>Public interest</strong></h4>\\n  </ul>\\n  <p>Blockchain can allow fully transparent and public database. It can allow all the inhabitants to consult reports and result of public administrations</p>\\n  <ul>\\n  <h4><strong>Collaborative economy</strong></h4>\\n  </ul>\\n  <p>Uber and AirBnB&nbsp;</p>\\n  <ul><h4><strong>File storage &amp; Data Management</strong></h4>\\n  <h4><strong>Crowdfunding</strong></h4>\\n  <h4><strong>IoT</strong></h4>\\n  </ul>\\n  <ul>\\n  <h4><strong>Stock trading</strong></h4>\\n  </ul>\\n</div>\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-blockchain',\n  templateUrl: './about-blockchain.component.html',\n  styleUrls: ['./about-blockchain.component.css']\n})\nexport class AboutBlockchainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"body {\\r\\n    margin:0;\\r\\n    padding:0;\\r\\n    min-height: calc(100vh - 115px );\\r\\n    width: 100%;\\r\\n    background-color: #ffaf66;\\r\\n    \\r\\n    }\\r\\n.MyTxtContent{\\r\\n    padding:10px;\\r\\n    width: 100%;\\r\\n    background-color: #ffaf66;\\r\\n    text-align: center;\\r\\n    }\"","module.exports = \"<body>\\n    <div class=\\\"MyTxtContent\\\">\\n        <h1><strong>What’s a Cryptocurrency</strong></h1>\\n        <p>It is mainly a new kind of currency, digital currency. It is based on the blockchain and securitized by cryptographie. It allows balance and transaction. Its control is completely decentralized and everyone can use it without limitation, generally with a software or online. It has a limited supply defined.\\n          </p>\\n        <h2><strong>Is it really a currency?</strong></h2>\\n        <p>A currency is now simply entries in a database. In the usual currency, you have also physical entries that are basically the coins. Those entries are made without certain conditions. In this sense, a cryptocurrency is a currency as Euro or Dollar without the physical entries. \\n        </p>\\n        <h2><strong>Transaction &amp; confirmation</strong></h2>\\n        <p>Confirmation is the base of cryptocurrency and the most critical concept. Before the confirmation, a transaction can be forget but after it is set and totally irreversible. It will be added to list of at the chain of transaction, the blockchain. Each transaction is contained in a block and each block is a link in the chain. A block might contain multiple transactions. \\n          </p>\\n        <h4><strong>Anonymity</strong></h4>\\n        <p>Those transactions are completely anonymous, the only visible parameter is the address and there is no connection with real world identity. \\n          </p>\\n        <h4><strong>Global Network</strong></h4>\\n        <p>After the confirmation, the transaction is instantly sent to everyone connected to the blockchain. It is so repeated in multiple physical locations. This repetition is a key in the security of the blockchain; to hack it, you need to hack all the users\\n          </p>\\n        <h2><strong>What’s a miner</strong></h2>\\n        <p>Miner are the people responsible to confirm the transactions. It can be anyone connected to the blockchain. The miner uses a algorithm to encrypt the transaction and then add the link to the chain. For this job, the miner is rewarded usually by a percentage of the transaction.\\n          </p>\\n        <h2><strong>Is there future for cryptocurrencies?</strong></h2>\\n        <p>Everyday, new cryptocurrencies are created and old cryptocurrencies die. They all come with a project but a lot of them are not good enough. Only some of them will survive.\\n        Most of them are pumped and dumped by speculator and it is really difficult to know their real values. Now, a lot of people are attracted even banks and government by cryptocurrencies and for sure it will have an impact in the future, because this invention is huge but everyone should be really prudent putting his money inside.\\n          </p>\\n      </div>\\n</body>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-crypto',\n  templateUrl: './about-crypto.component.html',\n  styleUrls: ['./about-crypto.component.css']\n})\nexport class AboutCryptoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"body {\\r\\n  margin:0;\\r\\n  padding:0;\\r\\n  min-height: calc(100vh - 115px );\\r\\n  width: 100%;\\r\\n  background-color: #ffaf66;\\r\\n  }\\r\\n  .AboutUsContent{\\r\\n    text-align: center;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n  .MyTeam{\\r\\n    text-align: -webkit-center;\\r\\n    width:100%;\\r\\n  }\\r\\n  .TeamMember{\\r\\n    text-align: center;\\r\\n    border-style: solid;\\r\\n    width: -webkit-fit-content;\\r\\n    background-color: #eea96a;\\r\\n  }\\r\\n  .title{\\r\\n    color: #000000;\\r\\n  }\\r\\n  .img-circle {\\r\\n    border-radius: 75px;\\r\\n    margin: 5px;\\r\\n}\\r\\n  .icon-social-network{\\r\\n    width: 25px;\\r\\n    height: 25px;\\r\\n    margin: 5px;\\r\\n  }\\r\\n\\r\\n\"","module.exports = \"<body>\\n\\n    <div class=\\\"title\\\">\\n      AboutUs\\n    </div>\\n    <div class=\\\"AboutUsContent\\\">\\n        This website has been created by a young technology enthusiast engineer, <br>\\n        With the believe and the hope that blockchain can be part of the future. <br>\\n        This technology can be huge and influence the future of the computer science as well as other topics. <br>\\n        As the tip of the iceberg, cryptocurrency has to be now the proof of concept of blockchain. <br>\\n    </div>\\n  <div class=\\\"MyTeam\\\">\\n    <div class=\\\"TeamMember\\\">\\n        <img class=\\\"img-circle\\\" src=\\\"../../assets/pictures/me.jpg\\\">\\n        <br>\\n          Aurélien Gekiere\\n          <br>\\n          <a href=\\\"https://www.linkedin.com/in/aurelien-gekiere\\\" target=\\\"_blank\\\">\\n            <img class=\\\"icon-social-network\\\" src=\\\"../../assets/pictures/linkedin.png\\\">\\n          </a>\\n    </div>\\n  </div>\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-aboutus',\n  templateUrl: './aboutus.component.html',\n  styleUrls: ['./aboutus.component.css']\n})\nexport class AboutusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".li{\\r\\n  margin:0;\\r\\n  padding:0;\\r\\n  \\r\\n  background-color: #ffaf66;\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody {\\r\\n   margin:0;\\r\\n   padding:0;\\r\\n   height:100%;\\r\\n   width: 100%;\\r\\n   background-color: #ffaf66;\\r\\n   display: block;\\r\\n}\\r\\n\\r\\n#container {\\r\\n   min-height:100%;\\r\\n   position:relative;\\r\\n   background-color: #ffaf66;\\r\\n}\\r\\n\\r\\n#body {\\r\\n  background-color: #ffaf66;\\r\\n  padding-bottom:15px;   /* Height of the footer */\\r\\n}\\r\\n\\r\\n#footer {\\r\\n   position:fixed;\\r\\n   bottom:0;\\r\\n   width:100%;\\r\\n   height:15px;   /* Height of the footer */\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"container\\\">\\r\\n    <div id=\\\"header\\\">\\r\\n        <app-topbar></app-topbar>\\r\\n    </div>\\r\\n    <div id=\\\"body\\\">\\r\\n      <div class=\\\"outer-outlet\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div id=\\\"footer\\\">\\r\\n        <app-footer></app-footer>\\r\\n    </div>\\r\\n </div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Cryptocurrency Simulator';\r\n  page = 'main';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { HttpModule  } from '@angular/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SelectDropDownModule } from 'ngx-select-dropdown'\r\n\r\nimport { routes } from './app.routes';\r\nimport { AppComponent } from './app.component';\r\nimport { AboutusComponent } from './aboutus/aboutus.component';\r\nimport { DialogSimulationComponent } from './dialog-simulation/dialog-simulation.component';\r\nimport { MoneysimulatorComponent } from './moneysimulator/moneysimulator.component';\r\nimport { MoneysimulatorComponentV2 } from './moneysimulatorV2/moneysimulatorV2.component';\r\nimport { TopbarComponent } from './topbar/topbar.component';\r\nimport { InfoComponent } from './info/info.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CollapseModule, BsDropdownModule } from 'ngx-bootstrap';\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\nimport 'hammerjs';\r\n\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatStepperModule,\r\n} from '@angular/material';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { AboutBlockchainComponent } from './about-blockchain/about-blockchain.component';\r\nimport { AboutCryptoComponent } from './about-crypto/about-crypto.component';\r\nimport { DialogInfoCryptoComponent } from './dialog-info-crypto/dialog-info-crypto.component';\r\nimport { RealtimeTransactionComponent } from './realtime-transaction/realtime-transaction.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AboutusComponent,\r\n    DialogSimulationComponent,\r\n    MoneysimulatorComponent,\r\n    MoneysimulatorComponentV2,\r\n    TopbarComponent,\r\n    InfoComponent,\r\n    FooterComponent,\r\n    AboutBlockchainComponent,\r\n    AboutCryptoComponent,\r\n    DialogInfoCryptoComponent,\r\n    RealtimeTransactionComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(routes, { useHash: true }),\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatStepperModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    NgbModule.forRoot(),\r\n    CollapseModule.forRoot(),\r\n    FilterPipeModule,\r\n    SelectDropDownModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [DialogSimulationComponent, DialogInfoCryptoComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { MoneysimulatorComponent } from './moneysimulator/moneysimulator.component';\r\nimport { MoneysimulatorComponentV2 } from './moneysimulatorV2/moneysimulatorV2.component';\r\nimport { InfoComponent } from './info/info.component';\r\nimport { AboutusComponent } from './aboutus/aboutus.component';\r\nimport { AboutCryptoComponent } from './about-crypto/about-crypto.component';\r\nimport { AboutBlockchainComponent } from './about-blockchain/about-blockchain.component';\r\nimport { RealtimeTransactionComponent } from './realtime-transaction/realtime-transaction.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: MoneysimulatorComponentV2 },\r\n  { path: '#', component: MoneysimulatorComponentV2 },\r\n  { path: 'MoneySim', component: MoneysimulatorComponent },\r\n  { path: 'infos', component: InfoComponent },\r\n  { path: 'aboutus', component: AboutusComponent },\r\n  { path: 'blockchain', component: AboutBlockchainComponent },\r\n  { path: 'cryptocurrency', component: AboutCryptoComponent },\r\n  { path: 'realtime', component: RealtimeTransactionComponent }\r\n];\r\n","export class Clcryptocurrency {\n  _id: number;\n  _name: string;\n  _symbol: string;\n\n  _coinName: string;\n  _fullName: string;\n  _isTrading: boolean;\n  _algorithm: string;\n  _prooftype: string;\n  _fullypremined: boolean;\n  _totalCoinsupply: number;\n  _sortOrder: number;\n  \n  _picture: URL;\n  _color: string;\n  _primary: boolean;\n  \n static PreUrl: string;\n\n\n\n  constructor(id, name, symbol, urlpic, coinName, fullName, isTrading, algorithm, prooftype, fullypremined, totalCoinsupply, sortOrder)\n  {\n    this._id = id;\n    this._name = name;\n    this._symbol = symbol;\n    this._picture = urlpic;\n    this._coinName = coinName;\n    this._fullName = fullName;\n    this._isTrading = isTrading;\n    this._algorithm = algorithm;\n    this._prooftype = prooftype;\n    this._fullypremined = fullypremined;\n    this._totalCoinsupply = totalCoinsupply;\n    this._sortOrder = sortOrder;\n  }\n\n  get name(): string{\n    return this._name;\n  }\n  set name(actName: string){\n    this._name = actName;\n  }\n  get id(): number{\n    return this._id;\n  }\n  set id(actId: number){\n    this._id = actId;\n  }\n  get symbol(): string{\n    return this._symbol;\n  }\n  set symbol(actSymbol: string){\n    this._symbol = actSymbol;\n  }\n\n  \n  get coinName(): string{\n    return this._coinName;\n  }\n  set coinName(actcoinName: string){\n    this._coinName = actcoinName;\n  }\n  get fullName(): string{\n    return this._fullName;\n  }\n  set fullName(actfullName: string){\n    this._fullName = actfullName;\n  }\n  get isTrading(): boolean{\n    return this._isTrading;\n  }\n  set isTrading(ActisTrading: boolean){\n    this._isTrading = ActisTrading;\n  }\n  get totalCoinsupply(): number{\n    return this._totalCoinsupply;\n  }\n  set totalCoinsupply(acttotalCoinsupply: number){\n    this._totalCoinsupply = acttotalCoinsupply;\n  }\n  get sortOrder(): number{\n    return this._sortOrder;\n  }\n  set sortOrder(actsortOrder: number){\n    this._sortOrder = actsortOrder;\n  }\n  get algorithm(): string{\n    return this._algorithm;\n  }\n  set algorithm(actalgorithm: string){\n    this._algorithm = actalgorithm;\n  }\n  get prooftype(): string{\n    return this._prooftype;\n  }\n  set prooftype(actprooftype: string){\n    this._prooftype = actprooftype;\n  }\n  get fullypremined(): boolean{\n    return this._fullypremined; \n  }\n  set fullypremined(actfullypremined: boolean){\n    this._fullypremined = actfullypremined;\n  }\n\n\n  get color(): string{\n    return this._color;\n  }\n  set color(actColor: string){\n    this._color = actColor;\n  }\n  get picture(): URL{\n    return this._picture;\n  }\n  set picture(actPic: URL){\n    this._picture = actPic;\n  }\n  \n}\n","export class ExchangeData {\r\n\r\n\r\n    displayed : boolean = true;\r\n    name : string;\r\n    price : number;\r\n    flag : number;\r\n    lastUpdate : number;\r\n    lastVolume : number;\r\n    lastVolumeTo : number;\r\n    lastTradeID: number;\r\n    volume24h : number;\r\n    volume24hTo: number;\r\n    maskInt : number;\r\n\r\n    delta : number;\r\n    timestamp: number = 0;\r\n\r\n    constructor()\r\n    {}\r\n\r\n    get _name() : string\r\n    {\r\n        return this.name;\r\n    }\r\n    \r\n\r\n}\r\n","export class TradeSample {\n    subscriptionId: number;\n    exchangeName: string;\n    flag : number; // 1Buy 2Sell 4unknown\n    tradeId : number;\n    timestamp : number;\n    quantity: number;\n    price: number;\n    total: number;\n\n    constructor(subscriptionId, exchangeName, flag, tradeId, timestamp, quantity, price, total)\n    {\n        this.subscriptionId = subscriptionId;\n        this.exchangeName = exchangeName;\n        this.flag = flag;\n        this.tradeId = tradeId;\n        this.timestamp = timestamp;\n        this.quantity = quantity;\n        this.price = price;\n        this.total = total;\n    }\n    \n    get _subscriptionId(): number{\n        return this.subscriptionId;\n    }\n    set _subscriptionId(actsubscriptionId: number){\n        this.subscriptionId = actsubscriptionId;\n    }\n\n    get _exchangeName(): string{\n        return this.exchangeName;\n    }\n    set _exchangeName(actexchangeName: string){\n        this.exchangeName = actexchangeName;\n    }\n\n    get _flat(): number{\n        return this.flag;\n    }\n    set _flag(actflag: number){\n        this.flag = actflag;\n    }\n\n    get _tradeId(): number{\n        return this.tradeId;\n    }\n    set _tradeId(acttradeId: number){\n        this.tradeId = acttradeId;\n    }\n\n    get _timestamp(): number{\n        return this.timestamp;\n    }\n    set _timestamp(acttimestamp: number){\n        this.timestamp = acttimestamp;\n    }\n\n    get _quantity(): number{\n        return this.quantity;\n    }\n    set _quantity(actquantity: number){\n        this.quantity = actquantity;\n    }\n\n    get _price(): number{\n        return this.price;\n    }\n    set _price(actprice: number){\n        this.price = actprice;\n    }\n\n    get _total(): number{\n        return this.total;\n    }\n    set _total(acttotal: number){\n        this.total = acttotal;\n    }\n}\n","module.exports = \"html,body {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n   }\\r\\n \\r\\n   .MainpopupContent{\\r\\n     text-align: center;\\r\\n   }\\r\\n \\r\\n   .myPopupButton{\\r\\n     background-color: #e4791b;\\r\\n     color: #ffffff;\\r\\n   }\\r\\n \\r\\n   h1{\\r\\n     text-align: center;\\r\\n   }\"","module.exports = \"<p>\\n  <!--\\n\\n    this._isTrading = isTrading;\\n    this._algorithm = algorithm;\\n    this._prooftype = prooftype;\\n    this._fullypremined = fullypremined;\\n    this._totalCoinsupply = totalCoinsupply;\\n    this._sortOrder = sortOrder;\\n  -->\\n  CoinName : {{actCrypto.name}}\\n  <br>\\n  Symbol : {{actCrypto.symbol}}\\n  <br>\\n  <img class=\\\"DisplayPic\\\" [src]=\\\"actCrypto.picture\\\" (click)=\\\"openInfo()\\\">\\n  <br>\\n  FullName : {{actCrypto.fullName}}\\n  <br>\\n  Is coin Traded : {{actCrypto.isTrading}}\\n  <br>\\n  Algorithm Used : {{actCrypto.algorithm}}\\n  <br>\\n  Total coin supply : {{actCrypto.totalCoinsupply}}\\n  <br>\\n</p>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nimport {Clcryptocurrency} from '../class/clcryptocurrency';\n\n@Component({\n  selector: 'app-dialog-info-crypto',\n  templateUrl: './dialog-info-crypto.component.html',\n  styleUrls: ['./dialog-info-crypto.component.css']\n})\nexport class DialogInfoCryptoComponent implements OnInit {\n\nactCrypto: Clcryptocurrency;\n\n  constructor(     \n    public dialogRef: MatDialogRef<DialogInfoCryptoComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.actCrypto = data.actCrypto;\n     }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"html,body {\\r\\n   width: 100%;\\r\\n   height: 100%;\\r\\n   padding: 0;\\r\\n   margin: 0;\\r\\n  }\\r\\n\\r\\n  .MainpopupContent{\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n  .myPopupButton{\\r\\n    background-color: #e4791b;\\r\\n    color: #ffffff;\\r\\n  }\\r\\n\\r\\n  h1{\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\n<h1> Your Simulation</h1>\\n  <div class=\\\"MainpopupContent\\\">\\n    <br>\\n    <div *ngIf=\\\"data.StartValue != 0 && data.EndValue != 0\\\">\\n      <p>Your currency {{data.Currency.viewValue}}</p>\\n      <br>\\n      <p>Your simulation is in {{data.CryptoCurreny._symbol}}</p>\\n      <br>\\n        <div *ngIf=\\\"data.Difference > 0\\\">\\n            <p>If you had put {{data.Amount}}{{data.Currency.viewValue}} the {{data.StartDate | date: 'dd/MM/yyyy'}}</p>\\n            <br>\\n            <p>You would have had {{data.EndAmount}}{{data.Currency.viewValue}} the {{data.EndDate | date: 'dd/MM/yyyy'}}</p>\\n            <br>\\n            You Would have won {{data.Difference}} {{data.Currency.viewValue}}\\n        </div>\\n        <div *ngIf=\\\"data.Difference < 0\\\">\\n            <p>If you had put {{data.Amount}}{{data.Currency.viewValue}} the {{data.StartDate | date: 'dd/MM/yyyy'}}</p>\\n            <br>\\n            <p>You would have had {{data.EndAmount}}{{data.Currency.viewValue}} the {{data.EndDate | date: 'dd/MM/yyyy'}}</p>\\n            <br>\\n            You Would have lost {{data.Difference}} {{data.Currency.viewValue}}\\n        </div>\\n        <div *ngIf=\\\"data.Difference == 0\\\">\\n            There is no difference in this period.\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"data.StartValue == 0 || data.EndValue == 0\\\">\\n      There is a mistake in your input or no data available for the data set!\\n    </div>\\n    <br>\\n    <button mat-raised-button class=\\\"myPopupButton\\\" (click)=\\\"onNoClick()\\\" >Thanks For the Simulation!</button>\\n  </div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\n\n@Component({\n  selector: 'app-dialog-simulation',\n  templateUrl: './dialog-simulation.component.html',\n  styleUrls: ['./dialog-simulation.component.css']\n})\nexport class DialogSimulationComponent implements OnInit {\n\n  StartDate: Date;\n  EndDate: Date;\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogSimulationComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.StartDate = data.StartDate;\n      this.EndDate = data.EndDate;\n     }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"p{\\r\\n  background-color: #303030;\\r\\n  margin: 0;\\r\\n  font-size: 10px;\\r\\n  text-align: center;\\r\\n  color: #ffffff;\\r\\n}\\r\\n\"","module.exports = \"<p>\\n    ©Copyright CryptoSim | <a href=\\\"mailto:contact@cryptocurrencysimulator.com\\\" data-rel=\\\"external\\\">Contact</a> | Using Cryptocompare API\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"body {\\r\\n  margin:0;\\r\\n  padding:0;\\r\\n  height: calc(100vh - 115px );\\r\\n  width: 100%;\\r\\n  background-color: #ffaf66;\\r\\n  }\\r\\n\"","module.exports = \"<body>\\n<div class=\\\"title\\\">\\n  Informations\\n</div>\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.css']\n})\nexport class InfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"body,html {\\r\\n  margin:0;\\r\\n  padding:0;\\r\\n  height: calc(100vh - 115px );\\r\\n  width: 100%;\\r\\n  background-color: #ffaf66;\\r\\n  }\\r\\n\\r\\n  .BigPicRow{\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .BigPicColumn{\\r\\n    width: 33%;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n  .BigPic{\\r\\n    cursor: pointer;\\r\\n    max-height: 33% ;\\r\\n    max-width: 33% ;\\r\\n  }\\r\\n\\r\\n  .MyTable{\\r\\n    width: 100%;\\r\\n    background-color: #ffaf66;\\r\\n    border-top: 15px solid #ffaf66;\\r\\n  }\\r\\n\\r\\n  h2{\\r\\n    text-align: center;\\r\\n    color: #ffffff;\\r\\n    background-color: #ffaf66;\\r\\n  }\\r\\n\\r\\n  p{\\r\\n    text-align: center;\\r\\n    background-color: #ffaf66;\\r\\n    border-bottom: 15px solid #ffaf66;\\r\\n  }\\r\\n\\r\\n  .MyButton{\\r\\n  text-align: center;\\r\\n  padding-bottom: 15px;\\r\\n  background-color: #ffaf66;\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n  .SimulateButton{\\r\\n  text-align: center;\\r\\n  color: #ffffff;\\r\\n  background-color: #e4791b;\\r\\n}\\r\\n\\r\\n  .FlatCurInput{\\r\\n width: 65px;\\r\\n background-color: #ffaf66;\\r\\n}\\r\\n\\r\\n  .DateInput{\\r\\n  width: 120px;\\r\\n }\\r\\n\"","module.exports = \"<body>\\r\\n<div>\\r\\n    <table class=\\\"MyTable\\\">\\r\\n        <tr class=\\\"BigPicRow\\\">\\r\\n          <th  class=\\\"BigPicColumn\\\"><img class=\\\"BigPic\\\" [src]=\\\"MyCrypto[0].picture\\\" id=\\\"bigPic1\\\" (click)=\\\"ClickPic(0)\\\"></th>\\r\\n          <th  class=\\\"BigPicColumn\\\"><img class=\\\"BigPic\\\" [src]=\\\"MyCrypto[1].picture\\\" id=\\\"bigPic2\\\" (click)=\\\"ClickPic(1)\\\"></th>\\r\\n          <th  class=\\\"BigPicColumn\\\"><img class=\\\"BigPic\\\" [src]=\\\"MyCrypto[2].picture\\\" id=\\\"bigPic3\\\" (click)=\\\"ClickPic(2)\\\"></th>\\r\\n        </tr>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n\\r\\n<br>\\r\\n\\r\\n<br>\\r\\n\\r\\n<br>\\r\\n\\r\\n<h2>\\r\\n  {{ActCrypto._name}} Simulation\\r\\n</h2>\\r\\n\\r\\n<p>\\r\\n\\r\\n  <mat-form-field class=\\\"DateInput\\\">\\r\\n    <input id=\\\"StartDate\\\" [(ngModel)]=\\\"ChoosenStartDate\\\" matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\"\\r\\n    [matDatepicker]=\\\"Startpicker\\\" placeholder=\\\"Start Date\\\">\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"Startpicker\\\"></mat-datepicker-toggle>\\r\\n    <mat-datepicker #Startpicker></mat-datepicker>\\r\\n  </mat-form-field>\\r\\n\\r\\n\\r\\n  <mat-form-field class=\\\"DateInput\\\">\\r\\n    <input id=\\\"EndDate\\\" matInput [(ngModel)]=\\\"ChoosenEndDate\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\"\\r\\n    [matDatepicker]=\\\"Endpicker\\\" placeholder=\\\"End Date\\\">\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"Endpicker\\\"></mat-datepicker-toggle>\\r\\n    <mat-datepicker #Endpicker></mat-datepicker>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <br/>\\r\\n\\r\\n  <mat-form-field class=\\\"FlatCurInput\\\">\\r\\n      <input matInput placeholder=\\\"Amount\\\" [(ngModel)]=\\\"Amount\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n\\r\\n  <mat-form-field class=\\\"FlatCurInput\\\">\\r\\n    <mat-select placeholder=\\\"Currency\\\" [(ngModel)]=\\\"actCurrency\\\">\\r\\n        <mat-option *ngFor=\\\"let currency of fiatCurrency\\\" [value]=\\\"currency.value\\\">\\r\\n          {{ currency.viewValue }}\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</p>\\r\\n\\r\\n<br>\\r\\n<div class=\\\"MyButton\\\">\\r\\n  <button mat-raised-button (click)=\\\"CryptoSimulation()\\\" class=\\\"SimulateButton\\\">Simulate!</button>\\r\\n</div>\\r\\n\\r\\n</body>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\nimport {Clcryptocurrency} from '../class/clcryptocurrency';\r\nimport { DialogSimulationComponent } from '../dialog-simulation/dialog-simulation.component';\r\n\r\nimport { CurrencyService } from '../../services/currency/currency.http.service.service';\r\n\r\n\r\nimport {Http, Headers, RequestOptions, Response } from '@angular/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-moneysimulator',\r\n  templateUrl: './moneysimulator.component.html',\r\n  styleUrls: ['./moneysimulator.component.css'],\r\n  providers: [CurrencyService]\r\n})\r\nexport class MoneysimulatorComponent implements OnInit {\r\n\r\n  minDate = new Date(2000, 0, 1);\r\n  maxDate = new Date();\r\n  ChoosenStartDate = new Date();\r\n  ChoosenEndDate = new Date();\r\n  actCurrency = 'USD';\r\n  Amount = 100;\r\n  ActCrypto: Clcryptocurrency;\r\n  private http: Http;\r\n\r\n  MyCrypto = new Array<Clcryptocurrency>();\r\n  SelectedCurrencyID: Number = 0;\r\n\r\n  fiatCurrency = [\r\n    {id: 0, value: 'USD', viewValue: '$'},\r\n    {id: 1, value: 'EUR', viewValue: '€'},\r\n    {id: 2, value: 'GBP', viewValue: '£'}\r\n  ];\r\n\r\n  constructor(public dialog: MatDialog, private currencyService: CurrencyService) {\r\n    this.TestInitCrypto();\r\n    this.ActCrypto = this.MyCrypto.filter(Temp => Temp._id === this.SelectedCurrencyID)[0];\r\n    console.log(currencyService.getAllCryptoCurrencies())\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  TestInitCrypto() {\r\n    this.MyCrypto.push(new Clcryptocurrency(0, 'Monero', 'XMR', '../../assets/pictures/xmr.png','','','','','','','',''));\r\n    this.MyCrypto.push(new Clcryptocurrency(1, 'Bitcoin', 'BTC', '../../assets/pictures/btc.png','','','','','','','',''));\r\n    this.MyCrypto.push(new Clcryptocurrency(2, 'Ethereum', 'ETH', '../../assets/pictures/eth.png','','','','','','','',''));\r\n  }\r\n\r\n  ClickPic(ID: number) {\r\n    this.SelectedCurrencyID = ID;\r\n    this.ActCrypto = this.MyCrypto.filter(Temp => Temp._id === ID)[0];\r\n  }\r\n\r\n  async CryptoSimulation() {\r\n     //console.log(this.ChoosenStartDate);\r\n     //console.log(this.ActCrypto._symbol);\r\n     //console.log(this.actCurrency);\r\n     //console.log(this.Amount);\r\n     const myFiatCurrency = this.fiatCurrency.filter(Temp => Temp.value === this.actCurrency)[0];\r\n     let EndValue;\r\n     let EndAmount;\r\n     let StartValue;\r\n     let Difference;\r\n     // tslint:disable-next-line:prefer-const\r\n     let MypromiseStart = await this.currencyService.getCurrencyValue\r\n     (this.ActCrypto._symbol, this.actCurrency, this.FromDateToTimeStamp(this.ChoosenStartDate)).then(\r\n      value => MypromiseStart = value);\r\n\r\n     // tslint:disable-next-line:prefer-const\r\n     let MypromiseEnd = await this.currencyService.getCurrencyValue\r\n        (this.ActCrypto._symbol, this.actCurrency, this.FromDateToTimeStamp(this.ChoosenEndDate)).then(\r\n          value => MypromiseEnd = value);\r\n\r\n     //console.log(MypromiseStart);\r\n     //console.log(MypromiseEnd);\r\n     StartValue = MypromiseStart;\r\n     EndValue = MypromiseEnd;\r\n     const CryptoAmount = this.Amount / StartValue;\r\n     //console.log(CryptoAmount);\r\n     EndAmount = EndValue * CryptoAmount;\r\n     Difference = EndAmount - this.Amount;\r\n     Difference = parseFloat(Difference).toFixed(2);\r\n     EndAmount = parseFloat(EndAmount).toFixed(2);\r\n\r\n     const dialogRef = this.dialog.open(DialogSimulationComponent, {\r\n       data: {  StartDate: this.ChoosenStartDate, EndDate: this.ChoosenEndDate, Currency : myFiatCurrency\r\n       , CryptoCurreny : this.ActCrypto, StartValue : StartValue, EndValue : EndValue, Difference: Difference,\r\n       Symbol: this.fiatCurrency, Amount: this.Amount, EndAmount: EndAmount}\r\n     });\r\n     dialogRef.afterClosed().subscribe(result => {\r\n       //console.log('The dialog was closed');\r\n       result = true;\r\n     });\r\n    }\r\n\r\n    FromDateToTimeStamp(mDate: Date): number {\r\n      return Math.round(mDate.getTime() / 1000);\r\n    }\r\n\r\n    CheckVar() {}\r\n}\r\n","module.exports = \"body,html {\\r\\n  margin:0;\\r\\n  padding:0;\\r\\n  height: calc(100vh - 115px );\\r\\n  width: 100%;\\r\\n  background-color: #ffaf66;\\r\\n  }\\r\\n\\r\\n  .BigPicRow{\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .BigPicColumn{\\r\\n    height: 20%;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n  .BigPic{\\r\\n    cursor: pointer;\\r\\n    max-width: 50%;\\r\\n    margin-top: 10px;\\r\\n  }\\r\\n\\r\\n  .SmallPicRow{\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .SmallPicColumn{\\r\\n    height: 10%;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n  .SmallPic{\\r\\n    cursor: pointer;\\r\\n    max-width: 50%;\\r\\n    margin-top: 10px;\\r\\n  }\\r\\n\\r\\n  .MyTable{\\r\\n    width: 100%;\\r\\n    background-color: #ffaf66;\\r\\n    border-top: 15px solid #ffaf66;\\r\\n  }\\r\\n\\r\\n  h2{\\r\\n    text-align: center;\\r\\n    color: #ffffff;\\r\\n    background-color: #ffaf66;\\r\\n  }\\r\\n\\r\\n  p{\\r\\n    text-align: center;\\r\\n    background-color: #ffaf66;\\r\\n    border-bottom: 15px solid #ffaf66;\\r\\n  }\\r\\n\\r\\n  .MyButton{\\r\\n  text-align: center;\\r\\n  padding-bottom: 15px;\\r\\n  background-color: #ffaf66;\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n  .SimulateButton{\\r\\n  text-align: center;\\r\\n  color: #ffffff;\\r\\n  background-color: #e4791b;\\r\\n}\\r\\n\\r\\n  .FlatCurInput{\\r\\n width: 65px;\\r\\n background-color: #ffaf66;\\r\\n}\\r\\n\\r\\n  .DateInput{\\r\\n  width: 120px;\\r\\n }\\r\\n\\r\\n  .input-group{\\r\\n  width: 150px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n  .myList-Container{\\r\\n  height: 300px;\\r\\n  text-align: center;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  margin-top: 25px;\\r\\n}\\r\\n\\r\\n  .list-header {\\r\\n  min-height: 64px;\\r\\n  padding: 8px 24px 0;\\r\\n}\\r\\n\\r\\n  .mat-table {\\r\\n  overflow: auto;\\r\\n  max-height: 500px;\\r\\n}\\r\\n\\r\\n  .myTable-Container{\\r\\n  -ms-grid-row-align: center;\\r\\n      align-self: center;\\r\\n}\\r\\n\\r\\n  .myList{\\r\\n  width: 250px;\\r\\n  text-align: center;\\r\\n  max-height: 225px;\\r\\n}\\r\\n\\r\\n  .myList-Element{\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n  .Simulation-Area{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n  .DisplayPic{\\r\\n  width: 20%; \\r\\n}\\r\\n\\r\\n\"","module.exports = \"<body>\\r\\n<div  *ngIf=\\\"dataLoad;else other_content\\\">\\r\\n  <div>\\r\\n      <table class=\\\"MyTable\\\">\\r\\n          <tr class=\\\"BigPicRow\\\" >  \\r\\n              <th *ngFor=\\\"let i of FavFirstRow\\\" class=\\\"BigPicColumn\\\" [style.width.px]=\\\"100/FavFirstRowLength\\\">\\r\\n                <img class=\\\"BigPic\\\" [src]=\\\"MyCrypto[i].picture\\\" (click)=\\\"ClickPic(MyCrypto[i].id)\\\">             \\r\\n              </th> \\r\\n          </tr>\\r\\n          <tr class=\\\"BigPicRow\\\">\\r\\n              <th *ngFor=\\\"let i of FavSecondRow\\\" class=\\\"BigPicColumn\\\" [style.width.px]=\\\"100/FavSecondRowLength\\\">\\r\\n                <img class=\\\"BigPic\\\" [src]=\\\"MyCrypto[i].picture\\\" (click)=\\\"ClickPic(MyCrypto[i].id)\\\" >             \\r\\n              </th> </tr>\\r\\n      </table>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n      <table class=\\\"MyTable\\\">\\r\\n          <tr class=\\\"SmallPicRow\\\" >  \\r\\n              <th *ngFor=\\\"let i of OtherFirstRow\\\" class=\\\"SmallPicColumn\\\" [style.width.px]=\\\"100/OtherFirstRowLength\\\">\\r\\n                <img class=\\\"SmallPic\\\" [src]=\\\"MyCrypto[i].picture\\\" (click)=\\\"ClickPic(MyCrypto[i].id)\\\">             \\r\\n              </th> \\r\\n          </tr>\\r\\n          <tr class=\\\"SmallPicRow\\\">\\r\\n              <th *ngFor=\\\"let i of OtherSecondRow\\\" class=\\\"SmallPicColumn\\\" [style.width.px]=\\\"100/OtherSecondRowLength\\\">\\r\\n                <img class=\\\"SmallPic\\\" [src]=\\\"MyCrypto[i].picture\\\" (click)=\\\"ClickPic(MyCrypto[i].id)\\\" >             \\r\\n              </th> </tr>\\r\\n      </table>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"myList-Container mat-elevation-z8\\\">\\r\\n      <div class=\\\"list-header\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    <div class=\\\"myTable-Container\\\">\\r\\n      <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"myList\\\">\\r\\n    \\r\\n        <!-- Position Column -->\\r\\n        <ng-container matColumnDef=\\\"Symbol\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let crypto\\\" (click)=\\\"ClickPic(crypto.id)\\\" class=\\\"myList-Element\\\"> {{crypto.symbol}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"CoinName\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let crypto\\\" (click)=\\\"ClickPic(crypto.id)\\\" class=\\\"myList-Element\\\"> {{crypto.coinName}} </mat-cell>\\r\\n        </ng-container>\\r\\n    \\r\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n      </mat-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <div id=\\\"Simulation\\\" class=\\\"Simulation-Area\\\">\\r\\n    <h2>\\r\\n      {{ActCrypto._name}} Simulation\\r\\n    </h2>\\r\\n    <img class=\\\"DisplayPic\\\" [src]=\\\"ActCrypto.picture\\\" (click)=\\\"openInfo()\\\"> \\r\\n    <p>\\r\\n\\r\\n      <mat-form-field class=\\\"DateInput\\\">\\r\\n        <input id=\\\"StartDate\\\" [(ngModel)]=\\\"ChoosenStartDate\\\" matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\"\\r\\n        [matDatepicker]=\\\"Startpicker\\\" placeholder=\\\"Start Date\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"Startpicker\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #Startpicker></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n\\r\\n\\r\\n      <mat-form-field class=\\\"DateInput\\\">\\r\\n        <input id=\\\"EndDate\\\" matInput [(ngModel)]=\\\"ChoosenEndDate\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\"\\r\\n        [matDatepicker]=\\\"Endpicker\\\" placeholder=\\\"End Date\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"Endpicker\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #Endpicker></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <br/>\\r\\n\\r\\n      <mat-form-field class=\\\"FlatCurInput\\\">\\r\\n          <input matInput placeholder=\\\"Amount\\\" [(ngModel)]=\\\"Amount\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n\\r\\n      <mat-form-field class=\\\"FlatCurInput\\\">\\r\\n        <mat-select placeholder=\\\"Currency\\\" [(ngModel)]=\\\"actCurrency\\\">\\r\\n            <mat-option *ngFor=\\\"let currency of fiatCurrency\\\" [value]=\\\"currency.value\\\">\\r\\n              {{ currency.viewValue }}\\r\\n            </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n\\r\\n    <br>\\r\\n    <div class=\\\"MyButton\\\">\\r\\n      <button mat-raised-button (click)=\\\"CryptoSimulation()\\\" class=\\\"SimulateButton\\\">Simulate!</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #other_content>other content here...</ng-template>\\r\\n\\r\\n</body>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\nimport {Clcryptocurrency} from '../class/clcryptocurrency';\r\nimport { DialogSimulationComponent } from '../dialog-simulation/dialog-simulation.component';\r\nimport { DialogInfoCryptoComponent } from '../dialog-info-crypto/dialog-info-crypto.component';\r\n\r\nimport { CurrencyService } from '../../services/currency/currency.http.service.service';\r\n\r\nimport {Http, Headers, RequestOptions, Response } from '@angular/http';\r\n\r\nimport {MatTableDataSource} from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-moneysimulator',\r\n  templateUrl: './moneysimulatorV2.component.html',\r\n  styleUrls: ['./moneysimulatorV2.component.css'],\r\n  providers: [CurrencyService]\r\n})\r\nexport class MoneysimulatorComponentV2 implements OnInit {\r\n\r\n  minDate = new Date(2000, 0, 1);\r\n  maxDate = new Date();\r\n  ChoosenStartDate = new Date();\r\n  ChoosenEndDate = new Date();\r\n  actCurrency = 'USD';\r\n  Amount = 100;\r\n  ActCrypto: Clcryptocurrency;\r\n  private http: Http;\r\n\r\n  displayedColumns = ['Symbol', 'CoinName'];\r\n  dataSource;\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  MyCrypto = new Array<Clcryptocurrency>();\r\n  FavCryptoId = new Array<number>();\r\n  FavCryptoItem = new Array<number>();\r\n  SelectedCurrencyID: Number = 749869;\r\n\r\n  dataLoad = false;\r\n\r\n  FavFirstRowLength: number;\r\n  FavFirstRow = new Array<number>();\r\n  FavSecondRowLength: number;\r\n  FavSecondRow = new Array<number>();\r\n\r\n  OtherFirstRowLength: number = 8;\r\n  OtherFirstRow = new Array<number>();\r\n  OtherSecondRowLength: number = 8;\r\n  OtherSecondRow = new Array<number>();\r\n\r\n  fiatCurrency = [\r\n    {id: 0, value: 'USD', viewValue: '$'},\r\n    {id: 1, value: 'EUR', viewValue: '€'},\r\n    {id: 2, value: 'GBP', viewValue: '£'}\r\n  ];\r\n\r\n  constructor(public dialog: MatDialog, private currencyService: CurrencyService) {}\r\n\r\n  async ngOnInit() {\r\n    this.MyCrypto = await this.currencyService.getAllgetAllCryptoCurrenciesParsed();\r\n    //console.log(this.MyCrypto);\r\n    this.ActCrypto = this.getCyptoItem(this.SelectedCurrencyID);\r\n\r\n\r\n    this.getRandomCrypto();\r\n\r\n    this.dataLoad = true;\r\n    //console.log(this.SelectedCurrencyID);\r\n    //console.log(this.ActCrypto);\r\n    this.dataSource = new MatTableDataSource(this.MyCrypto);\r\n    console.log(\"C'est chargé?\");\r\n  }\r\n\r\n  getRandomCrypto()\r\n  {\r\n    while(this.OtherFirstRow.length < this.OtherFirstRowLength)\r\n    {\r\n      let Temp = Math.floor(Math.random() * (this.MyCrypto.length - 0 + 1)) + 0;\r\n      if(!this.isDisplayed(Temp))\r\n      {\r\n        this.OtherFirstRow.push(Temp)\r\n      }\r\n    }\r\n    while(this.OtherSecondRow.length < this.OtherSecondRowLength)\r\n    {\r\n      let Temp = Math.floor(Math.random() * (this.MyCrypto.length - 0 + 1)) + 0;\r\n      if(!this.isDisplayed(Temp))\r\n      {\r\n        this.OtherSecondRow.push(Temp)\r\n      }\r\n    }\r\n  }\r\n\r\n  isDisplayed(numberId): boolean\r\n  {\r\n    for(let i in this.FavFirstRow)\r\n    {\r\n      if(i == numberId)\r\n      {\r\n        return true;\r\n      }\r\n    }\r\n    for(let i in this.FavSecondRow)\r\n    {\r\n      if(i == numberId)\r\n      {\r\n        return true;\r\n      }\r\n    }\r\n    for(let i in this.OtherFirstRow)\r\n    {\r\n      if(i == numberId)\r\n      {\r\n        return true;\r\n      }\r\n    }\r\n    for(let i in this.OtherSecondRow)\r\n    {\r\n      if(i == numberId)\r\n      {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getCyptoItem(numberID) : Clcryptocurrency\r\n  {\r\n    for(let i = 0; i < this.MyCrypto.length; i++)\r\n    {\r\n      if(this.MyCrypto[i]._id == numberID)\r\n      {\r\n        return this.MyCrypto[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCyptoItemFromId(numberID) : number\r\n  {\r\n    for(let i = 0; i < this.MyCrypto.length; i++)\r\n    {\r\n      if(this.MyCrypto[i]._id == numberID)\r\n      {\r\n        return i;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  ClickPic(ID: number) {\r\n    this.SelectedCurrencyID = ID;\r\n    this.ActCrypto = this.MyCrypto.filter(Temp => Temp._id === ID)[0];\r\n    var element = document.getElementById(\"Simulation\");\r\n    element.scrollIntoView();\r\n  }\r\n\r\n\r\n  async CryptoSimulation() {\r\n     //console.log(this.ChoosenStartDate);\r\n     //console.log(this.ActCrypto._symbol);\r\n     //console.log(this.actCurrency);\r\n     //console.log(this.Amount);\r\n     const myFiatCurrency = this.fiatCurrency.filter(Temp => Temp.value === this.actCurrency)[0];\r\n     let EndValue;\r\n     let EndAmount;\r\n     let StartValue;\r\n     let Difference;\r\n     // tslint:disable-next-line:prefer-const\r\n     let MypromiseStart = await this.currencyService.getCurrencyValue\r\n     (this.ActCrypto._symbol, this.actCurrency, this.FromDateToTimeStamp(this.ChoosenStartDate)).then(\r\n      value => MypromiseStart = value);\r\n\r\n     // tslint:disable-next-line:prefer-const\r\n     let MypromiseEnd = await this.currencyService.getCurrencyValue\r\n        (this.ActCrypto._symbol, this.actCurrency, this.FromDateToTimeStamp(this.ChoosenEndDate)).then(\r\n          value => MypromiseEnd = value);\r\n\r\n     //console.log(MypromiseStart);\r\n     //console.log(MypromiseEnd);\r\n     StartValue = MypromiseStart;\r\n     EndValue = MypromiseEnd;\r\n     const CryptoAmount = this.Amount / StartValue;\r\n     //console.log(CryptoAmount);\r\n     EndAmount = EndValue * CryptoAmount;\r\n     Difference = EndAmount - this.Amount;\r\n     Difference = parseFloat(Difference).toFixed(2);\r\n     EndAmount = parseFloat(EndAmount).toFixed(2);\r\n\r\n     const dialogRef = this.dialog.open(DialogSimulationComponent, {\r\n       data: {  StartDate: this.ChoosenStartDate, EndDate: this.ChoosenEndDate, Currency : myFiatCurrency\r\n       , CryptoCurreny : this.ActCrypto, StartValue : StartValue, EndValue : EndValue, Difference: Difference,\r\n       Symbol: this.fiatCurrency, Amount: this.Amount, EndAmount: EndAmount}\r\n     });\r\n     dialogRef.afterClosed().subscribe(result => {\r\n       //console.log('The dialog was closed');\r\n       result = true;\r\n     });\r\n    }\r\n\r\n    openInfo()\r\n    {\r\n      const dialogRef = this.dialog.open(DialogInfoCryptoComponent, {\r\n        data: {  actCrypto: this.ActCrypto}\r\n      });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        //console.log('The dialog was closed');\r\n        result = true;\r\n      });\r\n    }\r\n\r\n    FromDateToTimeStamp(mDate: Date): number {\r\n      return Math.round(mDate.getTime() / 1000);\r\n    }\r\n\r\n    CheckVar() {}\r\n}\r\n","module.exports = \"body,html {\\r\\n    margin:0;\\r\\n    padding:0;\\r\\n    height: calc(100vh - 115px );\\r\\n    width: 100%;\\r\\n    background-color: #ffaf66;\\r\\n    }  \\r\\n    .MyTable{\\r\\n      width: 100%;\\r\\n      background-color: #ffaf66;\\r\\n      border-top: 15px solid #ffaf66;\\r\\n    }  \\r\\n    h1{\\r\\n      text-align: center;\\r\\n      color: #000000;\\r\\n      background-color: #ffaf66;\\r\\n    }  \\r\\n    p{\\r\\n      text-align: center;\\r\\n      background-color: #ffaf66;\\r\\n      border-bottom: 15px solid #ffaf66;\\r\\n    }  \\r\\n    .MyButton{\\r\\n    text-align: center;\\r\\n    padding-bottom: 15px;\\r\\n    background-color: #ffaf66;\\r\\n    margin-bottom: 15px;\\r\\n  }  \\r\\n    .SimulateButton{\\r\\n    text-align: center;\\r\\n    color: #ffffff;\\r\\n    background-color: #e4791b;\\r\\n  }  \\r\\n    .FlatCurInput{\\r\\n   width: 65px;\\r\\n   background-color: #ffaf66;\\r\\n  }  \\r\\n    .DateInput{\\r\\n    width: 120px;\\r\\n   }  \\r\\n    .input-group{\\r\\n    width: 150px;\\r\\n    text-align: center;\\r\\n  }  \\r\\n    .myList-Container{\\r\\n    height: 300px;\\r\\n    text-align: center;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-top: 25px;\\r\\n  }  \\r\\n    .list-header {\\r\\n    min-height: 64px;\\r\\n    padding: 8px 24px 0;\\r\\n  }  \\r\\n    .mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 500px;\\r\\n  }  \\r\\n    .myTable-Container{\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n  }  \\r\\n    .myTable-Exchange{\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n    width: 750px;\\r\\n\\r\\n  }  \\r\\n    .myTable-Trader{\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n    width: 300px;\\r\\n  }  \\r\\n    .myList{\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    height: 300px;\\r\\n  }  \\r\\n    .myList-Element{\\r\\n    cursor: pointer;\\r\\n  }  \\r\\n    .DisplayPic{\\r\\n    width: 20%; \\r\\n  }  \\r\\n    .EchangeChoose{\\r\\n    width: 100%;\\r\\n    text-align: -webkit-center;\\r\\n  }  \\r\\n    .EchangeInput{\\r\\n    width: 250px;\\r\\n    max-height: 500px;\\r\\n  }  \\r\\n    .form-control{\\r\\n   margin-bottom: 15px;\\r\\n  }  \\r\\n    .MyButton{\\r\\n    text-align: center;\\r\\n    background-color: #ffaf66;\\r\\n    padding-top: 5px;\\r\\n    margin-top: 5px;\\r\\n    padding-bottom: 5px;\\r\\n    margin-bottom: 5px;\\r\\n  }\"","module.exports = \"<body>\\r\\n  <h1><strong>Realtime Transaction</strong></h1>\\r\\n  <div  *ngIf=\\\"dataLoad;else other_content\\\">\\r\\n    <div class=\\\"EchangeChoose\\\">\\r\\n      <div class=\\\"EchangeInput\\\">\\r\\n      \\r\\n        <ngx-select-dropdown [config]=\\\"configfsym\\\" [options]=\\\"MyCrypto\\\" \\r\\n        [(value)]=\\\"fsym\\\" [multiple]=\\\"false\\\" class=\\\"CryptoList\\\" ></ngx-select-dropdown>\\r\\n\\r\\n        <br>\\r\\n\\r\\n        <ngx-select-dropdown [config]=\\\"configtsym\\\" [options]=\\\"tsymList\\\" \\r\\n        [(value)]=\\\"tsym\\\" [multiple]=\\\"false\\\" ></ngx-select-dropdown>\\r\\n\\r\\n        <div class=\\\"MyButton\\\">\\r\\n          <button mat-raised-button (click)=\\\"CryptoSimulation()\\\" class=\\\"SimulateButton\\\">Get RealTime Data</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"myList-Container mat-elevation-z8\\\"> \\r\\n      <div class=\\\"myTable-Exchange\\\">\\r\\n        <mat-table #table [dataSource]=\\\"dataSourceTrade\\\" class=\\\"myList\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Exchange\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Exchange </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let trade\\\" class=\\\"myList-Element\\\"> {{trade.exchangeName}} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Price\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Price </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let trade\\\" class=\\\"myList-Element\\\"> {{trade.price}} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Quantity\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Quantity </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let trade\\\" class=\\\"myList-Element\\\"> {{trade.quantity}} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Total\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Total </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let trade\\\" class=\\\"myList-Element\\\"> {{trade.total}} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <mat-header-row *matHeaderRowDef=\\\"displayTradeColumns\\\"></mat-header-row>\\r\\n          <mat-row *matRowDef=\\\"let row; columns: displayTradeColumns;\\\"></mat-row>\\r\\n        </mat-table>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"myList-Container mat-elevation-z8\\\">\\r\\n      <div class=\\\"list-header\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"myTable-Trader\\\">\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"myList\\\">\\r\\n\\r\\n          <!-- Position Column -->\\r\\n          <ng-container matColumnDef=\\\"Display\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Displayed </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let exchange\\\" class=\\\"myList-Element\\\"> \\r\\n              <mat-checkbox [(ngModel)]=\\\"exchange.displayed\\\" (click)=\\\"diplayedChange(exchange.name,exchange.displayed)\\\"></mat-checkbox>\\r\\n            </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Name\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let exchange\\\" class=\\\"myList-Element\\\"> {{exchange.name}} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Price\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Price in {{tsym}} </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let exchange\\\" class=\\\"myList-Element\\\"> {{exchange.price}} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Compare\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Compare </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let exchange\\\" class=\\\"myList-Element\\\"> {{exchange.delta}} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>\\r\\n      </div>\\r\\n      <div class=\\\"MyButton\\\">\\r\\n        <button mat-raised-button (click)=\\\"SelectAllTrade()\\\" class=\\\"SimulateButton\\\">Select All</button>\\r\\n        <button mat-raised-button (click)=\\\"UnSelectAllTrade()\\\" class=\\\"SimulateButton\\\">Unselect All</button>\\r\\n        <button mat-raised-button (click)=\\\"CryptoSimulation()\\\" class=\\\"SimulateButton\\\">Display</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <br>\\r\\n    <br>\\r\\n  </div>\\r\\n  <ng-template #other_content>other content here...</ng-template>\\r\\n</body>\"","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\r\nimport { TradeStreamerService } from '../../services/streamer/trade-streamer.service';\r\nimport {MatTableDataSource} from '@angular/material';\r\n\r\nimport {ExchangeData} from '../class/exchange-data';\r\nimport {TradeSample} from '../class/trade-sample';\r\nimport {TradeSrc} from '../class/trade-src';\r\n\r\nimport * as io from 'socket.io-client';\r\nimport { AnonymousSubscription } from 'rxjs/Subscription';\r\n\r\nimport { CurrencyService } from '../../services/currency/currency.http.service.service';\r\nimport { Clcryptocurrency } from '../class/clcryptocurrency';\r\n\r\n@Component({\r\n  selector: 'app-realtime-transaction',\r\n  templateUrl: './realtime-transaction.component.html',\r\n  styleUrls: ['./realtime-transaction.component.css'],\r\n  providers: [TradeStreamerService, CurrencyService]\r\n})\r\nexport class RealtimeTransactionComponent implements OnInit, OnDestroy {\r\n\r\n  private socket;\r\n\r\n  private LowestPrice: number = 0;\r\n\r\n  private UnthreatedData: Array<string>;\r\n  private Exchange : Array<ExchangeData>;\r\n  private Trade : Array<TradeSample>;\r\n  private subscription;\r\n  dataSource;\r\n  displayedColumns = ['Display','Name', 'Price', 'Compare'];\r\n\r\n  dataLoad = false;\r\n  \r\n  MyCrypto = new Array<Clcryptocurrency>();\r\n  fsym :Clcryptocurrency;\r\n  tsym = 'BTC';\r\n\r\n  configfsym = {\r\n    displayKey:\"_fullName\", //if objects array passed which key to be displayed defaults to description,\r\n    search:true, //enables the search plugin to search in the list\r\n    height: '400px'\r\n    }\r\n\r\n  configtsym = {\r\n      displayKey:\"viewValue\", //if objects array passed which key to be displayed defaults to description,\r\n      search:false //enables the search plugin to search in the list\r\n      }\r\n  \r\n  dataSourceTrade;\r\n  displayTradeColumns = ['Exchange', 'Price', 'Quantity', 'Total'];\r\n\r\n  tsymList = [\r\n    {id: 0, value: 'USD', viewValue: '$'},\r\n    {id: 1, value: 'EUR', viewValue: '€'},\r\n    {id: 2, value: 'GBP', viewValue: '£'},\r\n    {id: 3, value: 'BTC', viewValue: 'Ƀ'},\r\n    {id: 4, value: 'ETH', viewValue: 'Ξ'},\r\n    {id: 5, value: 'GOLD', viewValue: 'Gold'}\r\n  ];\r\n\r\n  /*\r\n  CCC.STATIC.CURRENCY.SYMBOL = {\r\n    , 'LTC'  : 'Ł'\r\n    , 'DAO'  : 'Ð'\r\n    , 'CNY'  : '¥'\r\n    , 'JPY'  : '¥'\r\n    , 'PLN'  : 'zł'\r\n    , 'RUB'  : '₽'\r\n    , 'INR'  : '₹'\r\n    , 'BRL'  : 'R$'\r\n  };\r\n  */\r\n  \r\n\r\n  constructor(private RealtimeService: TradeStreamerService, private currencyService: CurrencyService) { \r\n    console.log(\"Here or Not?\");  \r\n   }\r\n\r\n   diplayedChange(Exchange: string, Displayed: boolean)\r\n   {\r\n     console.log(Exchange);\r\n     console.log(Displayed);\r\n   };\r\n\r\n   CompareString(string1:string, string2: string){\r\n    if ( string1 < string2 ){\r\n      return -1;\r\n    }else if( string1 > string2){\r\n        return 1;\r\n    }else{\r\n      return 0;\t\r\n    }\r\n  };\r\n\r\n  CompareInt(int1:number, int2: number){\r\n    if ( int1 < int2 ){\r\n      return -1;\r\n    }else if( int1 > int2){\r\n        return 1;\r\n    }else{\r\n      return 0;\t\r\n    }\r\n  };\r\n\r\n  updatePrice(Trade: TradeSample)\r\n  {\r\n    let i = 0;\r\n    //console.log(Trade.exchangeName)\r\n    while(Trade.exchangeName != this.Exchange[i].name && i < this.Exchange.length)\r\n    {\r\n      //console.log(i + \" : \" + this.Exchange[i].name)\r\n      i++;\r\n    }\r\n    if (Trade.exchangeName == this.Exchange[i].name)\r\n    {\r\n      if(this.LowestPrice == 0 || this.LowestPrice > Trade.price)\r\n      {\r\n        this.LowestPrice = Trade.price;\r\n      }\r\n      else\r\n      {\r\n        if(Trade.timestamp > this.Exchange[i].timestamp)\r\n        {\r\n          this.Exchange[i].price = Trade.price;\r\n          this.Exchange[i].delta = ((this.Exchange[i].price/this.LowestPrice) * 100) - 100; \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await this.RealtimeService.setCrypto('BTC', 'SNC')\r\n    this.MyCrypto = await this.currencyService.getAllgetAllCryptoCurrenciesParsed();\r\n    await this.RealtimeService.getSocketData();\r\n    this.Exchange = this.RealtimeService.getExchange();\r\n    this.Exchange.sort((a,b) => this.CompareString( a._name, b._name));\r\n    this.subscription = this.RealtimeService.getSubscription();\r\n    this.StartSocket();\r\n    console.log(this.Exchange);\r\n    this.dataSource = new MatTableDataSource(this.Exchange);\r\n    //console.log(this.dataSource);\r\n\r\n    this.dataLoad = true;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    console.log(\"OnDestroy\");\r\n    this.socket.emit('SubRemove', { subs: this.subscription });\r\n  }\r\n\r\n  StartSocket(){\r\n    this.socket = io(this.RealtimeService.getStreamURl());\r\n    this.socket.emit('SubAdd', { subs: this.subscription });\r\n    this.UnthreatedData = new Array<string>();\r\n    this.socket.on('m', (data) => {\r\n      this.threatDate(data);\r\n    });\r\n   }\r\n\r\n  threatDate(data:any)\r\n   {\r\n      this.UnthreatedData.push(data); \r\n      console.log(data);\r\n      this.pushTrade(data);\r\n      this.dataSourceTrade = new MatTableDataSource(this.Trade)\r\n   }\r\n\r\n   pushTrade(currentData:string){\r\n    let tradeField = currentData.split('~');\r\n    if (tradeField[0] != \"3\")\r\n    {\r\n      let TradeSampleItem = new TradeSample(tradeField[0],tradeField[1],tradeField[4],tradeField[5],tradeField[6],tradeField[7],tradeField[8],tradeField[9]);\r\n      this.updatePrice(TradeSampleItem);\r\n      //console.log(TradeSampleItem);\r\n      this.writeData(TradeSampleItem);\r\n    }\r\n   }\r\n\r\n   writeData(mTrade: TradeSample)\r\n   {\r\n    if (this.Trade == undefined)\r\n    {\r\n      this.Trade = new Array<TradeSample>();\r\n      this.Trade.push(mTrade);\r\n    }\r\n    else\r\n    {\r\n      this.Trade.push(mTrade);\r\n    }\r\n    this.Trade.sort((b,a) => this.CompareInt( a.timestamp, b.timestamp));\r\n   }\r\n\r\n  async getTrade()\r\n  {\r\n    this.Trade = await this.RealtimeService.getTrade();\r\n    this.dataSourceTrade = new MatTableDataSource(this.Trade);\r\n    console.log(\"Refresh\");\r\n    console.log(this.Trade);\r\n  }\r\n\r\n  UnSelectAllTrade()\r\n  {\r\n    let i = 0;\r\n    for(i = 0; i < this.Exchange.length; i++)\r\n    {\r\n      this.Exchange[i].displayed = false;\r\n    }\r\n    this.dataSource = new MatTableDataSource(this.Exchange);\r\n  }\r\n\r\n  SelectAllTrade()\r\n  {\r\n    let i = 0;\r\n    for(i = 0; i < this.Exchange.length; i++)\r\n    {\r\n      this.Exchange[i].displayed = true;\r\n    }\r\n    this.dataSource = new MatTableDataSource(this.Exchange);\r\n  }\r\n\r\n  DeleteSocket(){\r\n    this.socket = io(this.RealtimeService.getStreamURl());\r\n    this.socket.emit('SubRemove', { subs: this.subscription });\r\n    this.UnthreatedData = new Array<string>();\r\n   }\r\n\r\n}\r\n","module.exports = \"body {\\r\\n  margin:0;\\r\\n  padding:0;\\r\\n  size: 45px;\\r\\n}\\r\\nnav.navbar.navbar-inverse{\\r\\n  margin:0;\\r\\n  padding:0;\\r\\n}\\r\\nh1{\\r\\n  background-color: #303030;\\r\\n  margin: 0;\\r\\n  font-size: 45px;\\r\\n  text-align: center;\\r\\n  color: #ffffff;\\r\\n}\\r\\n.navbar-toggler-icon {\\r\\n  display: inline-block;\\r\\n  width: 1.5em;\\r\\n  height: 1.5em;\\r\\n  vertical-align: middle;\\r\\n  content: \\\"\\\";\\r\\n  background: no-repeat center center;\\r\\n  background-size: 100% 100%;\\r\\n}\\r\\n.navbar-toggler {\\r\\n  padding: .25rem .75rem;\\r\\n  font-size: 1.25rem;\\r\\n  line-height: 1;\\r\\n  background-color: transparent;\\r\\n  border: 1px solid transparent;\\r\\n  border-radius: .25rem;\\r\\n}\"","module.exports = \"<body>\\n  <h1>\\n    {{title}}\\n  </h1>\\n\\n  <nav class=\\\"navbar navbar-inverse\\\" role=\\\"navigation\\\">\\n    <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" aria-expanded=\\\"false\\\">\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n    </div>\\n      <div class=\\\"collapse navbar-collapse\\\" [collapse]=isCollapsed>\\n          <ul class=\\\"nav navbar-nav\\\">\\n              <li class=\\\"nav-item\\\"><a [routerLink]=\\\"['']\\\">Home</a></li>\\n              <li class=\\\"nav-item dropdown\\\">\\n                <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">Informations\\n                <span class=\\\"caret\\\"></span></a>\\n                <ul class=\\\"dropdown-menu\\\">\\n                  <li><a [routerLink]=\\\"['blockchain']\\\">Blockchain</a></li>\\n                  <li><a [routerLink]=\\\"['cryptocurrency']\\\">Cryptocurrency</a></li>\\n                </ul>\\n              </li>  \\n          </ul>\\n          <ul class=\\\"nav navbar-nav\\\">\\n            <li class=\\\"nav-item\\\"><a [routerLink]=\\\"['realtime']\\\">Realtime Transaction</a></li>\\n          </ul>\\n          <ul class=\\\"nav navbar-nav navbar-right\\\">\\n              <li class=\\\"nav-item\\\"><a [routerLink]=\\\"['aboutus']\\\">About us</a></li>\\n          </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.css']\n})\nexport class TopbarComponent implements OnInit {\n\n  title = 'Cryptocurrency Simulator';\n  isCollapsed = true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { Headers, Http, URLSearchParams } from '@angular/http';\r\n\r\nimport {Clcryptocurrency} from '../../app/class/clcryptocurrency';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { toInteger } from '@ng-bootstrap/ng-bootstrap/util/util';\r\n\r\n\r\n@Injectable()\r\nexport class CurrencyService  implements OnInit {\r\n\r\n  MainCrypto: Array<number>;\r\n\r\n  Json: JSON;\r\n \r\n\r\n  static FromDateToTimeStamp(mDate: Date): number {\r\n    return Math.round(mDate.getTime() / 1000);\r\n  }\r\n\r\n  private handleError(error: any): Promise<any> {\r\n    //console.error('An error occurred', error); // for demo purposes only\r\n    return Promise.reject(error.message || error);\r\n  }\r\n\r\n  constructor(private _http: Http) { \r\n    //console.log(this.getAllgetAllCryptoCurrenciesParsed());\r\n  }\r\n\r\n  async getAllCryptoCurrencies(): Promise<JSON> {\r\n    const url = 'https://min-api.cryptocompare.com/data/all/coinlist';\r\n    const Temp = await this._http.get(url).toPromise();\r\n    return Temp.json();\r\n  }\r\n\r\n  async ngOnInit()\r\n  {\r\n   \r\n  }\r\n\r\n  async getAllgetAllCryptoCurrenciesParsed(): Promise<Array<Clcryptocurrency>> {\r\n    let AllCrypto = new Array<Clcryptocurrency>();\r\n    this.Json = await this.getAllCryptoCurrencies();\r\n    let baseURL = this.Json['BaseLinkUrl'];\r\n    console.log(this.Json);\r\n    console.log(this.Json['Data']);\r\n\r\n    for(let crypto in this.Json['Data'])\r\n    {\r\n      let ActCrypto = new Clcryptocurrency(this.Json['Data'][crypto]['Id'], this.Json['Data'][crypto]['Name'],\r\n                            this.Json['Data'][crypto]['Symbol'], baseURL + this.Json['Data'][crypto]['ImageUrl'],\r\n                            this.Json['Data'][crypto]['CoinName'], this.Json['Data'][crypto]['FullName'],\r\n                            this.Json['Data'][crypto]['IsTrading'], this.Json['Data'][crypto]['Algorithm'],\r\n                            this.Json['Data'][crypto]['ProofType'], this.Json['Data'][crypto]['FullyPremined'],\r\n                            this.Json['Data'][crypto]['TotalCoinSupply'], this.Json['Data'][crypto]['SortOrder'])\r\n      AllCrypto.push(ActCrypto);\r\n    }\r\n    return AllCrypto;\r\n  }\r\n\r\n  async getFavoriteCryptoId(): Promise<Array<number>> {\r\n    let favoriteID = new Array<number>();\r\n    console.log(this.Json['DefaultWatchlist']['CoinIs']);\r\n    return this.Json['DefaultWatchlist']['CoinIs'].split(\",\");\r\n    \r\n  }\r\n\r\n  \r\n\r\n  async getCurrencyValue(CryptoName: string, Currency: string, TimeStamp: number): Promise<number> {\r\n    const AppName = 'CryptoSimulator';\r\n    // tslint:disable-next-line:prefer-const\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.append('fsym', CryptoName);\r\n    params.append('tsyms', Currency);\r\n    params.append('ts', TimeStamp.toString());\r\n    params.append('extraParams', AppName);\r\n    //console.log(params);\r\n    const urlpricehistorical = 'https://min-api.cryptocompare.com/data/pricehistorical?';\r\n    let Value;\r\n    await this.GetCryptoObsHTTP(params, urlpricehistorical)\r\n    .then(value => Value = value)\r\n    .then(\r\n      function() {\r\n        //console.log(Value);\r\n        //console.log(Value[CryptoName][Currency]);\r\n        return Value[CryptoName][Currency];\r\n      }\r\n    )\r\n    .catch(\r\n      function(err) {\r\n          console.log(err);\r\n          return -1;\r\n        }\r\n    );\r\n    return Value[CryptoName][Currency];\r\n  }\r\n\r\n  GetValueFromDataJson(data, CryptoName, Currency): number {\r\n    return data[CryptoName][Currency];\r\n  }\r\n\r\n  async GetCryptoObsHTTP(params: URLSearchParams, URL: string): Promise<JSON> {\r\n    const Temp = await this._http.get(URL, {params : params}).toPromise();\r\n    return Temp.json();\r\n  }\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport * as io from 'socket.io-client';\r\nimport { Headers, Http, URLSearchParams } from '@angular/http';\r\n\r\nimport {ExchangeData} from '../../app/class/exchange-data';\r\nimport {TradeSample} from '../../app/class/trade-sample';\r\nimport {TradeSrc} from '../../app/class/trade-src';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class TradeStreamerService{\r\n\r\n  \r\n  private URL : string;\r\n  private streamUrl = \"https://streamer.cryptocompare.com/\";\r\n\r\n\r\n  private fsym : string;\r\n  private tsym : string;\r\n\r\n  private subscription = new Array<string>();\r\n\r\n  private SubscriptionType : number;\r\n  private Exchange : Array<ExchangeData>;\r\n\r\n  private Trade: Array<TradeSample>;\r\n\r\n  private socket;\r\n\r\n  constructor(private _http: Http) {\r\n    console.log(\"StartService\");\r\n    \r\n   }\r\n\r\n   setCrypto(mTsym: string, mFsym: string)\r\n   {\r\n      this.tsym = mTsym;\r\n      this.fsym = mFsym;\r\n      this.URL = \"https://min-api.cryptocompare.com/data/subs?fsym=\" + mFsym + \"&tsyms=\" + mTsym;\r\n   }\r\n\r\n   async getSocketData()\r\n   {\r\n    let Temp = await this._http.get(this.URL).toPromise();\r\n    let myJson = Temp.json();\r\n    console.log(myJson);\r\n    console.log(this.tsym);\r\n    let currentSubs = myJson[this.tsym]['TRADES'];\r\n    this.Exchange = new Array<ExchangeData>();\r\n\r\n    for(let sub in currentSubs)\r\n    {\r\n      let tempEx = new ExchangeData();\r\n      tempEx.name = currentSubs[sub].split('~')[1];\r\n      tempEx.price = 0;\r\n      tempEx.delta = 0;\r\n      this.Exchange.push(tempEx);\r\n      this.subscription.push(currentSubs[sub]);\r\n    }\r\n   }\r\n\r\n\r\n   getExchange(): Array<ExchangeData>\r\n   {\r\n     return this.Exchange;\r\n   }\r\n\r\n   getTrade(): Array<TradeSample>\r\n   {\r\n    if (this.Trade == undefined)\r\n    {\r\n      return new Array<TradeSample>();\r\n    }\r\n    else\r\n    {\r\n      //console.log(this.Trade);\r\n      return this.Trade;\r\n    }\r\n   }\r\n\r\n   getSubscription(): Array<string>\r\n   {\r\n    if (this.subscription == undefined)\r\n    {\r\n      return new Array<string>();\r\n    }\r\n    else\r\n    {\r\n      console.log(this.subscription);\r\n      return this.subscription;\r\n    }\r\n   }\r\n\r\n   getStreamURl(): string\r\n   {\r\n      return this.streamUrl;\r\n   }\r\n\r\n   getData = () => {\r\n    return Observable.create((observer) => {\r\n        this.socket.on('m', (data) => {\r\n            observer.next(data);\r\n        });\r\n    });\r\n  }\r\n\r\n InitSocket = () => {\r\n  this.socket = io(this.getStreamURl());\r\n  this.socket.emit('SubAdd', { subs: this.subscription });\r\n }\r\n\r\n DeleteSocket() {\r\n  this.socket.emit('SubRemove', { subs: this.subscription });\r\n }\r\n\r\n\r\n\r\n}\r\n","/* (ignored) */"],"sourceRoot":""}